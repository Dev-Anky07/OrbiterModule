version: '3.8'

networks:
  # Specify the network for bridging
  app-network:
    driver: bridge

services:
  dashboard_history:
    build: ./history
    command: yarn run start:prod
    environment:
      NODE_ENV: 'production' # production development
      DB_HOST:  '${DB_HOST2}'
      DB_PORT: '${DB_PORT2}'
      DB_USER: '${DB_USER2}'
      DB_PASS: '${DB_PASS2}'
      DB_NAME: '${DB_NAME2}'
    # volumes:
    #   - './history/logs:/app/logs'
    ports:
      - '3003:3000'
    restart: always
    networks:
      - app-network

  dashboard_backend:
    build: ./backend
    command: yarn run start
    environment:
      NODE_ENV: 'development'
      ORBITER_SCENE: dashboard # dashboard: only dashboard | maker: only maker service | all
      ORBITER_MAKER_PRIVATE_KEYS: '' # {"makerAddress":"private_key"}
      PROMETHEUS_ALERTMANAGER: '{"api":"http://alertmanager:9093"}' # {"api":"http://alertmanager:9093"}
      DB_HOST: '${DB_HOST}'
      DB_PORT: '${DB_PORT}'
      DB_USER: '${DB_USER}'
      DB_PASS: '${DB_PASS}'
      DB_NAME: '${DB_NAME}'
      SUBGRAPHS: '${SUBGRAPHS}'
    volumes:
      - './backend/logs:/app/logs'
    #   - './backend:/app'
    ports:
      - '3002:3002'
    restart: always
    networks:
      - app-network

  dashboard_frontend:
    build: ./frontend
    # command: yarn run dev
    # environment:
      # BACKEND_API: 'http://ec2-18-177-135-205.ap-northeast-1.compute.amazonaws.com:3002/'
      # NODE_ENV: production # development production
    # volumes:
    #   - './frontend/docker.nginx.conf:/etc/nginx/nginx.conf'
    ports:
      - '3001:80'
    restart: always
    links:
      - dashboard_history
    networks:
      - app-network